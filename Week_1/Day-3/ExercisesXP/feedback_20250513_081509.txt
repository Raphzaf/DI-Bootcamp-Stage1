URL: https://github.com/Raphzaf/DI-Bootcamp-Stage1/blob/main/Week_1/Day-3/ExercisesXP/main.py
suggestions for improvement:
- In Exercise 3, the `major_color` for the US is inconsistently formatted as a list, while others are strings.  Maintain consistent data types for better readability and easier manipulation. Consider making all values lists for consistency.
- In Exercise 3, add comments to explain the purpose of each section of the code for better readability.  This is especially helpful for more complex dictionaries and operations.
- Exercise 2 could be improved by using a more descriptive variable name than `price`.  For example, `ticket_price` or `member_ticket_cost` would be more clear.  This improves readability.
- In Exercise 4, consider using dictionary comprehensions for a more concise and Pythonic approach to create the dictionaries instead of using for loops.
Brief justification:
- correctness: The code correctly implements all four exercises.  Exercise 1 accurately creates the dictionary using zip. Exercise 2 calculates the total movie cost correctly based on the age criteria.  Exercise 3 successfully manipulates the Zara dictionary, performing all requested operations correctly.  Exercise 4 generates the three dictionaries as required, but the code structure could be made more efficient using comprehensions. The slight deduction is due to inconsistencies in data types in Exercise 3.
- readability: The code is generally readable. However, improvements can be made by adding more descriptive variable names (Exercise 2) and consistently structuring data (Exercise 3)  More comments in Exercise 3 would enhance readability.  The use of f-strings for output is a positive aspect improving readability.
- performance: The code's performance is excellent. All algorithms are efficient, with time complexities appropriate for the tasks. The use of simple data structures and built-in functions (zip, enumerate, dict, sorted) leads to high performance. No unnecessary computations or loops are present.
- security: The code does not have any security vulnerabilities. It only deals with simple data manipulation, and there are no external inputs (except the bonus part in Exercise 2, which is not evaluated for security here) that could introduce security issues. The code doesn't interact with external systems, files, or networks.

